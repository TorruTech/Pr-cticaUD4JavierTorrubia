package util;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;

public class Util {

    public static void mostrarMensajeError(String mensaje) {
        JOptionPane.showMessageDialog(null, mensaje, "Error", JOptionPane.ERROR_MESSAGE);
    }

    public static String formatearFechaInversa(LocalDate fecha) {
        if (fecha == null) return "";
        return fecha.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
    }

        public static String formatearFecha(String fecha) {
            try {
                DateTimeFormatter inputFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy"); // Ajustar seg√∫n el formato del DatePicker
                DateTimeFormatter outputFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd"); // Formato para MongoDB

                LocalDate fechaFormateada = LocalDate.parse(fecha, inputFormatter);
                return fechaFormateada.format(outputFormatter); // Retorna la fecha en formato "YYYY-MM-DD"
            } catch (DateTimeParseException e) {
                System.err.println("Error al formatear la fecha: " + fecha);
                return null;
            }
        }
}
